-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
-- Version: 2022.2
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity StreamingDataWidthConverter_hls_2 is
port (
    in0_V_TDATA : IN STD_LOGIC_VECTOR (39 downto 0);
    out_V_TDATA : OUT STD_LOGIC_VECTOR (23 downto 0);
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    in0_V_TVALID : IN STD_LOGIC;
    in0_V_TREADY : OUT STD_LOGIC;
    out_V_TVALID : OUT STD_LOGIC;
    out_V_TREADY : IN STD_LOGIC );
end;


architecture behav of StreamingDataWidthConverter_hls_2 is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "StreamingDataWidthConverter_hls_2_StreamingDataWidthConverter_hls_2,hls_ip_2022_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=dataflow,HLS_SYN_CLOCK=7.591000,HLS_SYN_LAT=4398,HLS_SYN_TPT=4398,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=808,HLS_SYN_LUT=558,HLS_VERSION=2022_2}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';

    signal ap_rst_n_inv : STD_LOGIC;
    signal StreamingDataWidthConverter_Batch_39u_312u_2704u_U0_ap_start : STD_LOGIC;
    signal StreamingDataWidthConverter_Batch_39u_312u_2704u_U0_ap_done : STD_LOGIC;
    signal StreamingDataWidthConverter_Batch_39u_312u_2704u_U0_ap_continue : STD_LOGIC;
    signal StreamingDataWidthConverter_Batch_39u_312u_2704u_U0_ap_idle : STD_LOGIC;
    signal StreamingDataWidthConverter_Batch_39u_312u_2704u_U0_ap_ready : STD_LOGIC;
    signal StreamingDataWidthConverter_Batch_39u_312u_2704u_U0_intermediate1_din : STD_LOGIC_VECTOR (311 downto 0);
    signal StreamingDataWidthConverter_Batch_39u_312u_2704u_U0_intermediate1_write : STD_LOGIC;
    signal StreamingDataWidthConverter_Batch_39u_312u_2704u_U0_in0_V_TREADY : STD_LOGIC;
    signal StreamingDataWidthConverter_Batch_312u_24u_338u_U0_ap_start : STD_LOGIC;
    signal StreamingDataWidthConverter_Batch_312u_24u_338u_U0_ap_done : STD_LOGIC;
    signal StreamingDataWidthConverter_Batch_312u_24u_338u_U0_ap_continue : STD_LOGIC;
    signal StreamingDataWidthConverter_Batch_312u_24u_338u_U0_ap_idle : STD_LOGIC;
    signal StreamingDataWidthConverter_Batch_312u_24u_338u_U0_ap_ready : STD_LOGIC;
    signal StreamingDataWidthConverter_Batch_312u_24u_338u_U0_intermediate1_read : STD_LOGIC;
    signal StreamingDataWidthConverter_Batch_312u_24u_338u_U0_out_V_TDATA : STD_LOGIC_VECTOR (23 downto 0);
    signal StreamingDataWidthConverter_Batch_312u_24u_338u_U0_out_V_TVALID : STD_LOGIC;
    signal intermediate_full_n : STD_LOGIC;
    signal intermediate_dout : STD_LOGIC_VECTOR (311 downto 0);
    signal intermediate_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal intermediate_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal intermediate_empty_n : STD_LOGIC;

    component StreamingDataWidthConverter_hls_2_StreamingDataWidthConverter_Batch_39u_312u_2704u_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        in0_V_TVALID : IN STD_LOGIC;
        intermediate1_din : OUT STD_LOGIC_VECTOR (311 downto 0);
        intermediate1_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        intermediate1_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        intermediate1_full_n : IN STD_LOGIC;
        intermediate1_write : OUT STD_LOGIC;
        in0_V_TDATA : IN STD_LOGIC_VECTOR (39 downto 0);
        in0_V_TREADY : OUT STD_LOGIC );
    end component;


    component StreamingDataWidthConverter_hls_2_StreamingDataWidthConverter_Batch_312u_24u_338u_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        intermediate1_dout : IN STD_LOGIC_VECTOR (311 downto 0);
        intermediate1_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        intermediate1_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        intermediate1_empty_n : IN STD_LOGIC;
        intermediate1_read : OUT STD_LOGIC;
        out_V_TREADY : IN STD_LOGIC;
        out_V_TDATA : OUT STD_LOGIC_VECTOR (23 downto 0);
        out_V_TVALID : OUT STD_LOGIC );
    end component;


    component StreamingDataWidthConverter_hls_2_fifo_w312_d2_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (311 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (311 downto 0);
        if_num_data_valid : OUT STD_LOGIC_VECTOR (1 downto 0);
        if_fifo_cap : OUT STD_LOGIC_VECTOR (1 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;



begin
    StreamingDataWidthConverter_Batch_39u_312u_2704u_U0 : component StreamingDataWidthConverter_hls_2_StreamingDataWidthConverter_Batch_39u_312u_2704u_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => StreamingDataWidthConverter_Batch_39u_312u_2704u_U0_ap_start,
        ap_done => StreamingDataWidthConverter_Batch_39u_312u_2704u_U0_ap_done,
        ap_continue => StreamingDataWidthConverter_Batch_39u_312u_2704u_U0_ap_continue,
        ap_idle => StreamingDataWidthConverter_Batch_39u_312u_2704u_U0_ap_idle,
        ap_ready => StreamingDataWidthConverter_Batch_39u_312u_2704u_U0_ap_ready,
        in0_V_TVALID => in0_V_TVALID,
        intermediate1_din => StreamingDataWidthConverter_Batch_39u_312u_2704u_U0_intermediate1_din,
        intermediate1_num_data_valid => intermediate_num_data_valid,
        intermediate1_fifo_cap => intermediate_fifo_cap,
        intermediate1_full_n => intermediate_full_n,
        intermediate1_write => StreamingDataWidthConverter_Batch_39u_312u_2704u_U0_intermediate1_write,
        in0_V_TDATA => in0_V_TDATA,
        in0_V_TREADY => StreamingDataWidthConverter_Batch_39u_312u_2704u_U0_in0_V_TREADY);

    StreamingDataWidthConverter_Batch_312u_24u_338u_U0 : component StreamingDataWidthConverter_hls_2_StreamingDataWidthConverter_Batch_312u_24u_338u_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => StreamingDataWidthConverter_Batch_312u_24u_338u_U0_ap_start,
        ap_done => StreamingDataWidthConverter_Batch_312u_24u_338u_U0_ap_done,
        ap_continue => StreamingDataWidthConverter_Batch_312u_24u_338u_U0_ap_continue,
        ap_idle => StreamingDataWidthConverter_Batch_312u_24u_338u_U0_ap_idle,
        ap_ready => StreamingDataWidthConverter_Batch_312u_24u_338u_U0_ap_ready,
        intermediate1_dout => intermediate_dout,
        intermediate1_num_data_valid => intermediate_num_data_valid,
        intermediate1_fifo_cap => intermediate_fifo_cap,
        intermediate1_empty_n => intermediate_empty_n,
        intermediate1_read => StreamingDataWidthConverter_Batch_312u_24u_338u_U0_intermediate1_read,
        out_V_TREADY => out_V_TREADY,
        out_V_TDATA => StreamingDataWidthConverter_Batch_312u_24u_338u_U0_out_V_TDATA,
        out_V_TVALID => StreamingDataWidthConverter_Batch_312u_24u_338u_U0_out_V_TVALID);

    intermediate_U : component StreamingDataWidthConverter_hls_2_fifo_w312_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => StreamingDataWidthConverter_Batch_39u_312u_2704u_U0_intermediate1_din,
        if_full_n => intermediate_full_n,
        if_write => StreamingDataWidthConverter_Batch_39u_312u_2704u_U0_intermediate1_write,
        if_dout => intermediate_dout,
        if_num_data_valid => intermediate_num_data_valid,
        if_fifo_cap => intermediate_fifo_cap,
        if_empty_n => intermediate_empty_n,
        if_read => StreamingDataWidthConverter_Batch_312u_24u_338u_U0_intermediate1_read);




    StreamingDataWidthConverter_Batch_312u_24u_338u_U0_ap_continue <= ap_const_logic_1;
    StreamingDataWidthConverter_Batch_312u_24u_338u_U0_ap_start <= ap_const_logic_1;
    StreamingDataWidthConverter_Batch_39u_312u_2704u_U0_ap_continue <= ap_const_logic_1;
    StreamingDataWidthConverter_Batch_39u_312u_2704u_U0_ap_start <= ap_const_logic_1;

    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;

    in0_V_TREADY <= StreamingDataWidthConverter_Batch_39u_312u_2704u_U0_in0_V_TREADY;
    out_V_TDATA <= StreamingDataWidthConverter_Batch_312u_24u_338u_U0_out_V_TDATA;
    out_V_TVALID <= StreamingDataWidthConverter_Batch_312u_24u_338u_U0_out_V_TVALID;
end behav;
