// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module StreamingDataWidthConverter_hls_0_StreamingDataWidthConverter_Batch_108u_27u_21632u_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        intermediate1_dout,
        intermediate1_num_data_valid,
        intermediate1_fifo_cap,
        intermediate1_empty_n,
        intermediate1_read,
        out_V_TREADY,
        out_V_TDATA,
        out_V_TVALID
);

parameter    ap_ST_iter0_fsm_state1 = 1'd1;
parameter    ap_ST_iter1_fsm_state2 = 2'd2;
parameter    ap_ST_iter2_fsm_state3 = 2'd2;
parameter    ap_ST_iter1_fsm_state0 = 2'd1;
parameter    ap_ST_iter2_fsm_state0 = 2'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [107:0] intermediate1_dout;
input  [1:0] intermediate1_num_data_valid;
input  [1:0] intermediate1_fifo_cap;
input   intermediate1_empty_n;
output   intermediate1_read;
input   out_V_TREADY;
output  [31:0] out_V_TDATA;
output   out_V_TVALID;

reg ap_idle;
reg intermediate1_read;

reg   [0:0] ap_CS_iter0_fsm;
wire    ap_CS_iter0_fsm_state1;
reg   [1:0] ap_CS_iter1_fsm;
wire    ap_CS_iter1_fsm_state0;
reg   [1:0] ap_CS_iter2_fsm;
wire    ap_CS_iter2_fsm_state0;
reg    ap_done_reg;
reg    ap_block_state1_pp0_stage0_iter0;
reg   [0:0] icmp_ln526_reg_209;
reg   [0:0] icmp_ln529_reg_213;
wire   [0:0] icmp_ln529_reg_213_pp0_iter0_reg;
reg    ap_predicate_op32_read_state2;
reg    ap_block_state2_pp0_stage0_iter1;
reg    ap_block_state2_io;
wire    ap_CS_iter1_fsm_state2;
reg   [0:0] icmp_ln526_reg_209_pp0_iter1_reg;
wire    regslice_both_out_V_U_apdone_blk;
reg    ap_block_state3_pp0_stage0_iter2;
reg    ap_block_state3_io;
wire    ap_CS_iter2_fsm_state3;
wire   [0:0] icmp_ln526_fu_108_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    intermediate1_blk_n;
reg    out_V_TDATA_blk_n;
wire   [0:0] icmp_ln529_fu_120_p2;
reg   [107:0] ap_phi_mux_ei_V_3_phi_fu_80_p4;
wire   [107:0] ap_phi_reg_pp0_iter1_ei_V_3_reg_77;
wire   [107:0] zext_ln526_fu_159_p1;
reg   [80:0] ei_V_fu_52;
wire    ap_loop_init;
reg    ap_loop_init_pp0_iter1_reg;
reg   [80:0] ap_sig_allocacmp_ei_V_load;
reg   [31:0] o_fu_56;
wire   [31:0] o_5_fu_138_p3;
reg   [31:0] ap_sig_allocacmp_o_3;
reg   [16:0] t_fu_60;
wire   [16:0] t_4_fu_114_p2;
reg   [16:0] ap_sig_allocacmp_t_3;
wire   [31:0] o_4_fu_126_p2;
wire   [0:0] icmp_ln540_fu_132_p2;
wire   [26:0] eo_V_fu_164_p1;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg   [0:0] ap_NS_iter0_fsm;
reg   [1:0] ap_NS_iter1_fsm;
reg   [1:0] ap_NS_iter2_fsm;
reg    ap_ST_iter0_fsm_state1_blk;
reg    ap_ST_iter1_fsm_state2_blk;
reg    ap_ST_iter2_fsm_state3_blk;
wire    ap_start_int;
wire   [31:0] out_V_TDATA_int_regslice;
reg    out_V_TVALID_int_regslice;
wire    out_V_TREADY_int_regslice;
wire    regslice_both_out_V_U_vld_out;
reg    ap_condition_302;
reg    ap_condition_297;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_iter0_fsm = 1'd1;
#0 ap_CS_iter1_fsm = 2'd1;
#0 ap_CS_iter2_fsm = 2'd1;
#0 ap_done_reg = 1'b0;
end

StreamingDataWidthConverter_hls_0_flow_control_loop_pipe flow_control_loop_pipe_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int),
    .ap_continue(ap_continue)
);

StreamingDataWidthConverter_hls_0_regslice_both #(
    .DataWidth( 32 ))
regslice_both_out_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(out_V_TDATA_int_regslice),
    .vld_in(out_V_TVALID_int_regslice),
    .ack_in(out_V_TREADY_int_regslice),
    .data_out(out_V_TDATA),
    .vld_out(regslice_both_out_V_U_vld_out),
    .ack_out(out_V_TREADY),
    .apdone_blk(regslice_both_out_V_U_apdone_blk)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_iter0_fsm <= ap_ST_iter0_fsm_state1;
    end else begin
        ap_CS_iter0_fsm <= ap_NS_iter0_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_iter1_fsm <= ap_ST_iter1_fsm_state0;
    end else begin
        ap_CS_iter1_fsm <= ap_NS_iter1_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_iter2_fsm <= ap_ST_iter2_fsm_state0;
    end else begin
        ap_CS_iter2_fsm <= ap_NS_iter2_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((~((regslice_both_out_V_U_apdone_blk == 1'b1) | (ap_done_reg == 1'b1) | (1'b1 == ap_block_state3_io) | ((icmp_ln526_reg_209_pp0_iter1_reg == 1'd0) & (out_V_TREADY_int_regslice == 1'b0))) & (1'b1 == ap_CS_iter2_fsm_state3) & (ap_loop_exit_ready_pp0_iter2_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((~((regslice_both_out_V_U_apdone_blk == 1'b1) | (ap_done_reg == 1'b1) | (1'b1 == ap_block_state3_io) | ((icmp_ln526_reg_209_pp0_iter1_reg == 1'd0) & (out_V_TREADY_int_regslice == 1'b0))) & (1'b1 == ap_CS_iter2_fsm_state3) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b0))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= 1'b0;
    end else if ((~((ap_done_reg == 1'b1) | (1'b1 == ap_block_state2_io) | ((1'b1 == ap_CS_iter2_fsm_state3) & ((regslice_both_out_V_U_apdone_blk == 1'b1) | (1'b1 == ap_block_state3_io) | ((icmp_ln526_reg_209_pp0_iter1_reg == 1'd0) & (out_V_TREADY_int_regslice == 1'b0)))) | ((ap_predicate_op32_read_state2 == 1'b1) & (intermediate1_empty_n == 1'b0)) | ((icmp_ln526_reg_209 == 1'd0) & (out_V_TREADY_int_regslice == 1'b0))) & (1'b1 == ap_CS_iter1_fsm_state2))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_302)) begin
        if ((icmp_ln526_reg_209 == 1'd0)) begin
            ei_V_fu_52 <= {{ap_phi_mux_ei_V_3_phi_fu_80_p4[107:27]}};
        end else if ((ap_loop_init_pp0_iter1_reg == 1'b1)) begin
            ei_V_fu_52 <= 81'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_297)) begin
        if ((icmp_ln526_fu_108_p2 == 1'd0)) begin
            o_fu_56 <= o_5_fu_138_p3;
        end else if ((ap_loop_init == 1'b1)) begin
            o_fu_56 <= 32'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_297)) begin
        if ((icmp_ln526_fu_108_p2 == 1'd0)) begin
            t_fu_60 <= t_4_fu_114_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            t_fu_60 <= 17'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start_int == 1'b0) | ((1'b1 == ap_CS_iter2_fsm_state3) & ((regslice_both_out_V_U_apdone_blk == 1'b1) | (1'b1 == ap_block_state3_io) | ((icmp_ln526_reg_209_pp0_iter1_reg == 1'd0) & (out_V_TREADY_int_regslice == 1'b0)))) | ((1'b1 == ap_CS_iter1_fsm_state2) & ((1'b1 == ap_block_state2_io) | ((ap_predicate_op32_read_state2 == 1'b1) & (intermediate1_empty_n == 1'b0)) | ((icmp_ln526_reg_209 == 1'd0) & (out_V_TREADY_int_regslice == 1'b0))))) & (1'b1 == ap_CS_iter0_fsm_state1))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_init_pp0_iter1_reg <= ap_loop_init;
        icmp_ln526_reg_209 <= icmp_ln526_fu_108_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_done_reg == 1'b1) | (1'b1 == ap_block_state2_io) | ((1'b1 == ap_CS_iter2_fsm_state3) & ((regslice_both_out_V_U_apdone_blk == 1'b1) | (1'b1 == ap_block_state3_io) | ((icmp_ln526_reg_209_pp0_iter1_reg == 1'd0) & (out_V_TREADY_int_regslice == 1'b0)))) | ((ap_predicate_op32_read_state2 == 1'b1) & (intermediate1_empty_n == 1'b0)) | ((icmp_ln526_reg_209 == 1'd0) & (out_V_TREADY_int_regslice == 1'b0))) & (1'b1 == ap_CS_iter1_fsm_state2))) begin
        icmp_ln526_reg_209_pp0_iter1_reg <= icmp_ln526_reg_209;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start_int == 1'b0) | ((1'b1 == ap_CS_iter2_fsm_state3) & ((regslice_both_out_V_U_apdone_blk == 1'b1) | (1'b1 == ap_block_state3_io) | ((icmp_ln526_reg_209_pp0_iter1_reg == 1'd0) & (out_V_TREADY_int_regslice == 1'b0)))) | ((1'b1 == ap_CS_iter1_fsm_state2) & ((1'b1 == ap_block_state2_io) | ((ap_predicate_op32_read_state2 == 1'b1) & (intermediate1_empty_n == 1'b0)) | ((icmp_ln526_reg_209 == 1'd0) & (out_V_TREADY_int_regslice == 1'b0))))) & (icmp_ln526_fu_108_p2 == 1'd0) & (1'b1 == ap_CS_iter0_fsm_state1))) begin
        icmp_ln529_reg_213 <= icmp_ln529_fu_120_p2;
    end
end

always @ (*) begin
    if (((ap_done_reg == 1'b1) | (ap_start_int == 1'b0))) begin
        ap_ST_iter0_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_iter0_fsm_state1_blk = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_block_state2_io) | ((ap_predicate_op32_read_state2 == 1'b1) & (intermediate1_empty_n == 1'b0)) | ((icmp_ln526_reg_209 == 1'd0) & (out_V_TREADY_int_regslice == 1'b0)))) begin
        ap_ST_iter1_fsm_state2_blk = 1'b1;
    end else begin
        ap_ST_iter1_fsm_state2_blk = 1'b0;
    end
end

always @ (*) begin
    if (((regslice_both_out_V_U_apdone_blk == 1'b1) | (1'b1 == ap_block_state3_io) | ((icmp_ln526_reg_209_pp0_iter1_reg == 1'd0) & (out_V_TREADY_int_regslice == 1'b0)))) begin
        ap_ST_iter2_fsm_state3_blk = 1'b1;
    end else begin
        ap_ST_iter2_fsm_state3_blk = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start_int == 1'b0) | ((1'b1 == ap_CS_iter2_fsm_state3) & ((regslice_both_out_V_U_apdone_blk == 1'b1) | (1'b1 == ap_block_state3_io) | ((icmp_ln526_reg_209_pp0_iter1_reg == 1'd0) & (out_V_TREADY_int_regslice == 1'b0)))) | ((1'b1 == ap_CS_iter1_fsm_state2) & ((1'b1 == ap_block_state2_io) | ((ap_predicate_op32_read_state2 == 1'b1) & (intermediate1_empty_n == 1'b0)) | ((icmp_ln526_reg_209 == 1'd0) & (out_V_TREADY_int_regslice == 1'b0))))) & (icmp_ln526_fu_108_p2 == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state1))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((regslice_both_out_V_U_apdone_blk == 1'b1) | (ap_done_reg == 1'b1) | (1'b1 == ap_block_state3_io) | ((icmp_ln526_reg_209_pp0_iter1_reg == 1'd0) & (out_V_TREADY_int_regslice == 1'b0))) & (1'b1 == ap_CS_iter2_fsm_state3) & (ap_loop_exit_ready_pp0_iter2_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_iter2_fsm_state0) & (1'b1 == ap_CS_iter1_fsm_state0) & (1'b1 == ap_CS_iter0_fsm_state1) & (ap_start_int == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln526_reg_209 == 1'd0)) begin
        if ((icmp_ln529_reg_213_pp0_iter0_reg == 1'd0)) begin
            ap_phi_mux_ei_V_3_phi_fu_80_p4 = zext_ln526_fu_159_p1;
        end else if ((icmp_ln529_reg_213 == 1'd1)) begin
            ap_phi_mux_ei_V_3_phi_fu_80_p4 = intermediate1_dout;
        end else begin
            ap_phi_mux_ei_V_3_phi_fu_80_p4 = ap_phi_reg_pp0_iter1_ei_V_3_reg_77;
        end
    end else begin
        ap_phi_mux_ei_V_3_phi_fu_80_p4 = ap_phi_reg_pp0_iter1_ei_V_3_reg_77;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start_int == 1'b0) | ((1'b1 == ap_CS_iter2_fsm_state3) & ((regslice_both_out_V_U_apdone_blk == 1'b1) | (1'b1 == ap_block_state3_io) | ((icmp_ln526_reg_209_pp0_iter1_reg == 1'd0) & (out_V_TREADY_int_regslice == 1'b0)))) | ((1'b1 == ap_CS_iter1_fsm_state2) & ((1'b1 == ap_block_state2_io) | ((ap_predicate_op32_read_state2 == 1'b1) & (intermediate1_empty_n == 1'b0)) | ((icmp_ln526_reg_209 == 1'd0) & (out_V_TREADY_int_regslice == 1'b0))))) & (1'b1 == ap_CS_iter0_fsm_state1))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_iter1_fsm_state2) & (ap_loop_init_pp0_iter1_reg == 1'b1))) begin
        ap_sig_allocacmp_ei_V_load = 81'd0;
    end else begin
        ap_sig_allocacmp_ei_V_load = ei_V_fu_52;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_iter0_fsm_state1) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_o_3 = 32'd0;
    end else begin
        ap_sig_allocacmp_o_3 = o_fu_56;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_iter0_fsm_state1) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_t_3 = 17'd0;
    end else begin
        ap_sig_allocacmp_t_3 = t_fu_60;
    end
end

always @ (*) begin
    if (((ap_predicate_op32_read_state2 == 1'b1) & (1'b1 == ap_CS_iter1_fsm_state2))) begin
        intermediate1_blk_n = intermediate1_empty_n;
    end else begin
        intermediate1_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (1'b1 == ap_block_state2_io) | ((1'b1 == ap_CS_iter2_fsm_state3) & ((regslice_both_out_V_U_apdone_blk == 1'b1) | (1'b1 == ap_block_state3_io) | ((icmp_ln526_reg_209_pp0_iter1_reg == 1'd0) & (out_V_TREADY_int_regslice == 1'b0)))) | ((ap_predicate_op32_read_state2 == 1'b1) & (intermediate1_empty_n == 1'b0)) | ((icmp_ln526_reg_209 == 1'd0) & (out_V_TREADY_int_regslice == 1'b0))) & (ap_predicate_op32_read_state2 == 1'b1) & (1'b1 == ap_CS_iter1_fsm_state2))) begin
        intermediate1_read = 1'b1;
    end else begin
        intermediate1_read = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln526_reg_209_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_iter2_fsm_state3)) | ((icmp_ln526_reg_209 == 1'd0) & (1'b1 == ap_CS_iter1_fsm_state2)))) begin
        out_V_TDATA_blk_n = out_V_TREADY_int_regslice;
    end else begin
        out_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (1'b1 == ap_block_state2_io) | ((1'b1 == ap_CS_iter2_fsm_state3) & ((regslice_both_out_V_U_apdone_blk == 1'b1) | (1'b1 == ap_block_state3_io) | ((icmp_ln526_reg_209_pp0_iter1_reg == 1'd0) & (out_V_TREADY_int_regslice == 1'b0)))) | ((ap_predicate_op32_read_state2 == 1'b1) & (intermediate1_empty_n == 1'b0)) | ((icmp_ln526_reg_209 == 1'd0) & (out_V_TREADY_int_regslice == 1'b0))) & (icmp_ln526_reg_209 == 1'd0) & (1'b1 == ap_CS_iter1_fsm_state2))) begin
        out_V_TVALID_int_regslice = 1'b1;
    end else begin
        out_V_TVALID_int_regslice = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_iter0_fsm)
        ap_ST_iter0_fsm_state1 : begin
            ap_NS_iter0_fsm = ap_ST_iter0_fsm_state1;
        end
        default : begin
            ap_NS_iter0_fsm = 'bx;
        end
    endcase
end

always @ (*) begin
    case (ap_CS_iter1_fsm)
        ap_ST_iter1_fsm_state2 : begin
            if ((~((ap_done_reg == 1'b1) | (1'b1 == ap_block_state2_io) | ((1'b1 == ap_CS_iter2_fsm_state3) & ((regslice_both_out_V_U_apdone_blk == 1'b1) | (1'b1 == ap_block_state3_io) | ((icmp_ln526_reg_209_pp0_iter1_reg == 1'd0) & (out_V_TREADY_int_regslice == 1'b0)))) | ((ap_predicate_op32_read_state2 == 1'b1) & (intermediate1_empty_n == 1'b0)) | ((icmp_ln526_reg_209 == 1'd0) & (out_V_TREADY_int_regslice == 1'b0))) & ~((ap_done_reg == 1'b1) | (ap_start_int == 1'b0)) & (1'b1 == ap_CS_iter0_fsm_state1))) begin
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state2;
            end else if ((~((ap_done_reg == 1'b1) | (1'b1 == ap_block_state2_io) | ((1'b1 == ap_CS_iter2_fsm_state3) & ((regslice_both_out_V_U_apdone_blk == 1'b1) | (1'b1 == ap_block_state3_io) | ((icmp_ln526_reg_209_pp0_iter1_reg == 1'd0) & (out_V_TREADY_int_regslice == 1'b0)))) | ((ap_predicate_op32_read_state2 == 1'b1) & (intermediate1_empty_n == 1'b0)) | ((icmp_ln526_reg_209 == 1'd0) & (out_V_TREADY_int_regslice == 1'b0))) & ((1'b0 == ap_CS_iter0_fsm_state1) | ((1'b1 == ap_CS_iter0_fsm_state1) & ((ap_done_reg == 1'b1) | (ap_start_int == 1'b0)))))) begin
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state0;
            end else begin
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state2;
            end
        end
        ap_ST_iter1_fsm_state0 : begin
            if ((~((ap_done_reg == 1'b1) | (ap_start_int == 1'b0) | ((1'b1 == ap_CS_iter2_fsm_state3) & ((regslice_both_out_V_U_apdone_blk == 1'b1) | (1'b1 == ap_block_state3_io) | ((icmp_ln526_reg_209_pp0_iter1_reg == 1'd0) & (out_V_TREADY_int_regslice == 1'b0)))) | ((1'b1 == ap_CS_iter1_fsm_state2) & ((1'b1 == ap_block_state2_io) | ((ap_predicate_op32_read_state2 == 1'b1) & (intermediate1_empty_n == 1'b0)) | ((icmp_ln526_reg_209 == 1'd0) & (out_V_TREADY_int_regslice == 1'b0))))) & (1'b1 == ap_CS_iter0_fsm_state1))) begin
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state2;
            end else begin
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state0;
            end
        end
        default : begin
            ap_NS_iter1_fsm = 'bx;
        end
    endcase
end

always @ (*) begin
    case (ap_CS_iter2_fsm)
        ap_ST_iter2_fsm_state3 : begin
            if ((~((regslice_both_out_V_U_apdone_blk == 1'b1) | (ap_done_reg == 1'b1) | (1'b1 == ap_block_state3_io) | ((icmp_ln526_reg_209_pp0_iter1_reg == 1'd0) & (out_V_TREADY_int_regslice == 1'b0))) & ((1'b0 == ap_CS_iter1_fsm_state2) | ((1'b1 == ap_CS_iter1_fsm_state2) & ((1'b1 == ap_block_state2_io) | ((ap_predicate_op32_read_state2 == 1'b1) & (intermediate1_empty_n == 1'b0)) | ((icmp_ln526_reg_209 == 1'd0) & (out_V_TREADY_int_regslice == 1'b0))))))) begin
                ap_NS_iter2_fsm = ap_ST_iter2_fsm_state0;
            end else if (((~((regslice_both_out_V_U_apdone_blk == 1'b1) | (ap_done_reg == 1'b1) | (1'b1 == ap_block_state3_io) | ((icmp_ln526_reg_209_pp0_iter1_reg == 1'd0) & (out_V_TREADY_int_regslice == 1'b0))) & ~((1'b1 == ap_block_state2_io) | ((ap_predicate_op32_read_state2 == 1'b1) & (intermediate1_empty_n == 1'b0)) | ((icmp_ln526_reg_209 == 1'd0) & (out_V_TREADY_int_regslice == 1'b0))) & (1'b1 == ap_CS_iter1_fsm_state2)) | (~((regslice_both_out_V_U_apdone_blk == 1'b1) | (ap_done_reg == 1'b1) | (1'b1 == ap_block_state3_io) | ((icmp_ln526_reg_209_pp0_iter1_reg == 1'd0) & (out_V_TREADY_int_regslice == 1'b0))) & (icmp_ln526_reg_209_pp0_iter1_reg == 1'd1) & (1'b1 == ap_CS_iter2_fsm_state3)))) begin
                ap_NS_iter2_fsm = ap_ST_iter2_fsm_state3;
            end else begin
                ap_NS_iter2_fsm = ap_ST_iter2_fsm_state3;
            end
        end
        ap_ST_iter2_fsm_state0 : begin
            if ((~((ap_done_reg == 1'b1) | (1'b1 == ap_block_state2_io) | ((1'b1 == ap_CS_iter2_fsm_state3) & ((regslice_both_out_V_U_apdone_blk == 1'b1) | (1'b1 == ap_block_state3_io) | ((icmp_ln526_reg_209_pp0_iter1_reg == 1'd0) & (out_V_TREADY_int_regslice == 1'b0)))) | ((ap_predicate_op32_read_state2 == 1'b1) & (intermediate1_empty_n == 1'b0)) | ((icmp_ln526_reg_209 == 1'd0) & (out_V_TREADY_int_regslice == 1'b0))) & (1'b1 == ap_CS_iter1_fsm_state2))) begin
                ap_NS_iter2_fsm = ap_ST_iter2_fsm_state3;
            end else begin
                ap_NS_iter2_fsm = ap_ST_iter2_fsm_state0;
            end
        end
        default : begin
            ap_NS_iter2_fsm = 'bx;
        end
    endcase
end

assign ap_CS_iter0_fsm_state1 = ap_CS_iter0_fsm[32'd0];

assign ap_CS_iter1_fsm_state0 = ap_CS_iter1_fsm[32'd0];

assign ap_CS_iter1_fsm_state2 = ap_CS_iter1_fsm[32'd1];

assign ap_CS_iter2_fsm_state0 = ap_CS_iter2_fsm[32'd0];

assign ap_CS_iter2_fsm_state3 = ap_CS_iter2_fsm[32'd1];

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = ((ap_done_reg == 1'b1) | (ap_start_int == 1'b0));
end

always @ (*) begin
    ap_block_state2_io = ((icmp_ln526_reg_209 == 1'd0) & (out_V_TREADY_int_regslice == 1'b0));
end

always @ (*) begin
    ap_block_state2_pp0_stage0_iter1 = (((ap_predicate_op32_read_state2 == 1'b1) & (intermediate1_empty_n == 1'b0)) | ((icmp_ln526_reg_209 == 1'd0) & (out_V_TREADY_int_regslice == 1'b0)));
end

always @ (*) begin
    ap_block_state3_io = ((icmp_ln526_reg_209_pp0_iter1_reg == 1'd0) & (out_V_TREADY_int_regslice == 1'b0));
end

always @ (*) begin
    ap_block_state3_pp0_stage0_iter2 = ((regslice_both_out_V_U_apdone_blk == 1'b1) | ((icmp_ln526_reg_209_pp0_iter1_reg == 1'd0) & (out_V_TREADY_int_regslice == 1'b0)));
end

always @ (*) begin
    ap_condition_297 = (~((ap_done_reg == 1'b1) | (ap_start_int == 1'b0) | ((1'b1 == ap_CS_iter2_fsm_state3) & ((regslice_both_out_V_U_apdone_blk == 1'b1) | (1'b1 == ap_block_state3_io) | ((icmp_ln526_reg_209_pp0_iter1_reg == 1'd0) & (out_V_TREADY_int_regslice == 1'b0)))) | ((1'b1 == ap_CS_iter1_fsm_state2) & ((1'b1 == ap_block_state2_io) | ((ap_predicate_op32_read_state2 == 1'b1) & (intermediate1_empty_n == 1'b0)) | ((icmp_ln526_reg_209 == 1'd0) & (out_V_TREADY_int_regslice == 1'b0))))) & (1'b1 == ap_CS_iter0_fsm_state1));
end

always @ (*) begin
    ap_condition_302 = (~((ap_done_reg == 1'b1) | (1'b1 == ap_block_state2_io) | ((1'b1 == ap_CS_iter2_fsm_state3) & ((regslice_both_out_V_U_apdone_blk == 1'b1) | (1'b1 == ap_block_state3_io) | ((icmp_ln526_reg_209_pp0_iter1_reg == 1'd0) & (out_V_TREADY_int_regslice == 1'b0)))) | ((ap_predicate_op32_read_state2 == 1'b1) & (intermediate1_empty_n == 1'b0)) | ((icmp_ln526_reg_209 == 1'd0) & (out_V_TREADY_int_regslice == 1'b0))) & (1'b1 == ap_CS_iter1_fsm_state2));
end

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign ap_phi_reg_pp0_iter1_ei_V_3_reg_77 = 'bx;

always @ (*) begin
    ap_predicate_op32_read_state2 = ((icmp_ln529_reg_213 == 1'd1) & (icmp_ln526_reg_209 == 1'd0));
end

assign eo_V_fu_164_p1 = ap_phi_mux_ei_V_3_phi_fu_80_p4[26:0];

assign icmp_ln526_fu_108_p2 = ((ap_sig_allocacmp_t_3 == 17'd86528) ? 1'b1 : 1'b0);

assign icmp_ln529_fu_120_p2 = ((ap_sig_allocacmp_o_3 == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln529_reg_213_pp0_iter0_reg = icmp_ln529_reg_213;

assign icmp_ln540_fu_132_p2 = ((o_4_fu_126_p2 == 32'd4) ? 1'b1 : 1'b0);

assign o_4_fu_126_p2 = (ap_sig_allocacmp_o_3 + 32'd1);

assign o_5_fu_138_p3 = ((icmp_ln540_fu_132_p2[0:0] == 1'b1) ? 32'd0 : o_4_fu_126_p2);

assign out_V_TDATA_int_regslice = eo_V_fu_164_p1;

assign out_V_TVALID = regslice_both_out_V_U_vld_out;

assign t_4_fu_114_p2 = (ap_sig_allocacmp_t_3 + 17'd1);

assign zext_ln526_fu_159_p1 = ap_sig_allocacmp_ei_V_load;

endmodule //StreamingDataWidthConverter_hls_0_StreamingDataWidthConverter_Batch_108u_27u_21632u_s
